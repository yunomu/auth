AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: auth

Parameters:
  DomainName:
    Type: String
  Certificate:
    Type: String

Resources:
  ProductTable:
    Type: AWS::DynamoDB::Table
    Properties:
      BillingMode: PAY_PER_REQUEST
      AttributeDefinitions:
        - AttributeName: ClientId
          AttributeType: S
      KeySchema:
        - AttributeName: ClientId
          KeyType: HASH

  Bucket:
    Type: AWS::S3::Bucket

  BucketReadOnlyPolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Action:
              - s3:ListBucket
              - s3:Get*
            Resource:
              - !GetAtt Bucket.Arn
              - !Sub
                - "${BucketArn}/*"
                - BucketArn: !GetAtt Bucket.Arn

  PreSignupFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: lambda/presignup/
      Handler: presignup
      Runtime: go1.x
      Policies:
        - !Ref BucketReadOnlyPolicy
      Environment:
        Variables:
          REGION: !Ref AWS::Region
          WHITE_LIST_OBJECT: !Sub
            - "${BucketArn}/accounts/whitelist"
            - BucketArn: !GetAtt Bucket.Arn

  ProductTableReadOnlyPolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Action:
              - dynamodb:GetItem
              - dynamodb:BatchGetItem
              - dynamodb:Query
              - dynamodb:DescribeTable
            Resource:
              - !GetAtt ProductTable.Arn
              - !Sub
                - "${TableARN}/index/*"
                - { TableARN: !GetAtt ProductTable.Arn }

  PreAuthenticationFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: lambda/preauth/
      Handler: preauth
      Runtime: go1.x
      Policies:
        - !Ref ProductTableReadOnlyPolicy
      Environment:
        Variables:
          REGION: !Ref AWS::Region
          PRODUCT_TABLE: !Ref ProductTable

  UserPool:
    Type: AWS::Cognito::UserPool
    Properties:
      UsernameAttributes:
        - email
      UsernameConfiguration:
        CaseSensitive: False
      Policies:
        PasswordPolicy:
          MinimumLength: 8
          RequireLowercase: False
          RequireNumbers: False
          RequireSymbols: False
          RequireUppercase: False
          TemporaryPasswordValidityDays: 7
      AdminCreateUserConfig:
        AllowAdminCreateUserOnly: true
      AccountRecoverySetting:
        RecoveryMechanisms:
          - Priority: 1
            Name: verified_email
      AutoVerifiedAttributes:
        - email
      EmailConfiguration:
        EmailSendingAccount: COGNITO_DEFAULT
      LambdaConfig:
        PreSignUp: !GetAtt PreSignupFunction.Arn
        PreAuthentication: !GetAtt PreAuthenticationFunction.Arn

  UserPoolDomain:
    Type: AWS::Cognito::UserPoolDomain
    Properties:
      UserPoolId: !Ref UserPool
      Domain: !Ref DomainName
      CustomDomainConfig:
        CertificateArn: !Ref Certificate

  UserPoolId:
    Type: AWS::SSM::Parameter
    Properties:
      Type: String
      Name: !Sub "/stack/${AWS::StackName}/UserPoolId"
      Value: !Ref UserPool

Outputs:
  UserPoolId:
    Value: !Ref UserPool
  UserPoolIdSSM:
    Value: !Ref UserPoolId
  ProductTable:
    Value: !Ref ProductTable
